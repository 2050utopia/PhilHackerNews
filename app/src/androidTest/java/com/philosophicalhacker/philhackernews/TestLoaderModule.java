package com.philosophicalhacker.philhackernews;

import android.support.test.espresso.core.deps.guava.reflect.TypeToken;

import com.google.gson.Gson;
import com.philosophicalhacker.philhackernews.data.HackerNewsRestAdapter;

import java.lang.reflect.Type;
import java.util.List;

import dagger.Module;
import dagger.Provides;

/**
 * Overrides the HackerNewsRestAdapter with an adapter that loads a JSON string from memory.
 *
 * Created by MattDupree on 7/16/15.
 */
@Module(overrides = true, library = true, complete = false)
class TestLoaderModule {
    @Provides
    HackerNewsRestAdapter provideHackerNewsRestAdapter() {
        final Gson gson = new Gson();
        return new HackerNewsRestAdapter() {
            @Override
            public List<Integer> getTopStories() {
                Type listType = new TypeToken<List<Integer>>() {
                }.getType();
                return gson.fromJsonlistType);
            }

        };
    }
}
